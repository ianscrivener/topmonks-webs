version: 2.1
orbs:
  pulumi: pulumi/pulumi@1.0.0
test-site: &test-site
  docker:
    - image: circleci/node:10-browsers
  working_directory: ~/topmonks-webs
  steps:
    - checkout
    - attach_workspace:
        at: ~/topmonks-webs
    - restore_cache:
        keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
    - run:
        command: yarn run http-server ./public/$HOST
        background: true
    - run: |
        mkdir results
        yarn test:lighthouse
        yarn test:ava
        yarn test:broken-links:$HOST
    - store_artifacts:
        path: ./results
    - store_test_results:
        path: ./results

s3-deploy: &s3-deploy
  docker:
    - image: cibuilds/aws:latest
  working_directory: ~/topmonks-webs
  steps:
    - checkout
    - attach_workspace:
        at: ~/topmonks-webs
    - run:
        name: Deploy to S3
        command: aws s3 sync "public/$HOST" "s3://$HOST/"
    - run:
        name: Invalidate CDN distribution
        command: |
          aws configure set preview.cloudfront true
          aws cloudfront create-invalidation --distribution-id=$AWS_CLOUDFRONT_DISTRIBUTION_ID --paths=/*

jobs:
  build:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn run build
      - run: |
          mkdir results
          yarn test
      - store_artifacts:
          path: ./results
      - store_test_results:
          path: ./results
      - persist_to_workspace:
          root: .
          paths: public

  test-www-topmonks-com:
    <<: *test-site
    environment:
      HOST: www.topmonks.com

  test-blockchain-topmonks-com:
    <<: *test-site
    environment:
      HOST: blockchain.topmonks.com

  test-studio-topmonks-com:
    <<: *test-site
    environment:
      HOST: studio.topmonks.com

  test-www-topmonks-cz:
    <<: *test-site
    environment:
      HOST: www.topmonks.cz

  test-caffe-topmonks-cz:
    <<: *test-site
    environment:
      HOST: caffe.topmonks.cz

  test-prodeti-topmonks-cz:
    <<: *test-site
    environment:
      HOST: prodeti.topmonks.cz

  provision:
    docker:
      - image: 'circleci/node:10'
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - run:
          name: Install deps
          command: yarn
      - pulumi/update:
          stack: topmonks-webs
          skip-preview: true
      - run:
          name: Store updated Pulumi state
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "robot@topmonks.com"
            git config user.name "Deployment Bot"
            git add -A
            git commit -m "[skip ci] Pulumi checkpoint"
            # Push quietly to prevent showing the token in log
            git push -q https://${GITHUB_BOT_TOKEN}@github.com/topmonks/topmonks-webs.git master

  deploy-prodeti-topmonks-cz:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E81ZRHS2RR6UN
      HOST: prodeti.topmonks.cz

  deploy-blockchain-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E8FIHBRFAUTJQ
      HOST: blockchain.topmonks.com

  deploy-studio-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E3E7VE5619MYLH
      HOST: studio.topmonks.com

  deploy-www-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: EMNWZWEX2M2BH
      HOST: www.topmonks.com

  deploy-www-topmonks-cz:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E2K0QM3AL8O9FE
      HOST: www.topmonks.cz

  deploy-caffe-topmonks-cz:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: EQ3Z90HYRV83G
      HOST: caffe.topmonks.cz

workflows:
  build_and_deploy:
    jobs:
      - build
      - provision:
          context: org-global
          filters:
            branches:
              only: master
      - test-www-topmonks-com:
          requires:
            - build
      - test-blockchain-topmonks-com:
          requires:
            - build
      - test-studio-topmonks-com:
          requires:
            - build
      - test-www-topmonks-cz:
          requires:
            - build
      - test-caffe-topmonks-cz:
          requires:
            - build
      - test-prodeti-topmonks-cz:
          requires:
            - build
      - deploy-prodeti-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-prodeti-topmonks-cz
          filters:
            branches:
              only: master
      - deploy-www-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-www-topmonks-com
          filters:
            branches:
              only: master
      - deploy-www-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-www-topmonks-cz
          filters:
            branches:
              only: master
      - deploy-blockchain-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-blockchain-topmonks-com
          filters:
            branches:
              only: master
      - deploy-studio-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-studio-topmonks-com
          filters:
            branches:
              only: master

      - deploy-caffe-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-caffe-topmonks-cz
          filters:
            branches:
              only: master
