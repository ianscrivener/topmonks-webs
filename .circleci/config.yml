version: 2.1
orbs:
  pulumi: pulumi/pulumi@1.0.0
test-site: &test-site
  docker:
    - image: circleci/node:10-browsers
  working_directory: ~/topmonks-webs
  steps:
    - checkout
    - attach_workspace:
        at: ~/topmonks-webs
    - restore_cache:
        keys:
          - v3-dependencies-{{ checksum "yarn.lock" }}
    - run: |
        sudo apt-get install libnss3-tools
        mkdir -p $HOME/.pki/nssdb
        certutil -d $HOME/.pki/nssdb -N --empty-password
        certutil -d sql:$HOME/.pki/nssdb -A -t "P,," -n lws-cert -i ./node_modules/lws/ssl/lws-cert.pem
    - run:
        command: yarn run ws --compress --http2 -d ./public/$HOST
        background: true
    - run: |
        mkdir results
        yarn test:lighthouse
        yarn test:ava
        yarn test:broken-links:$HOST
    - store_artifacts:
        path: ./results
    - store_test_results:
        path: ./results

s3-deploy: &s3-deploy
  docker:
    - image: cibuilds/aws:latest
  working_directory: ~/topmonks-webs
  steps:
    - checkout
    - attach_workspace:
        at: ~/topmonks-webs
    - run:
        name: Deploy to S3
        command: aws s3 sync "public/$HOST" "s3://$HOST/"
    - run:
        name: Invalidate CDN distribution
        command: |
          aws configure set preview.cloudfront true
          aws cloudfront create-invalidation --distribution-id=$AWS_CLOUDFRONT_DISTRIBUTION_ID --paths=/*

jobs:
  build:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - restore_cache:
          keys:
            - v3-dependencies-{{ checksum "yarn.lock" }}

      - run: yarn install --link-duplicates --no-progress
      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn run build
      - run: |
          mkdir results
          yarn test
      - store_artifacts:
          path: ./results
      - store_test_results:
          path: ./results
      - persist_to_workspace:
          root: .
          paths: public

  pre-provision:
    docker:
      - image: "cibuilds/aws:latest"
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - run:
          name: Create Pulumi state folder
          command: mkdir -p .pulumi
      - run:
          name: Fetch Pulumi state from S3
          command: aws s3 sync s3://topmonks-pulumi-state/ .pulumi/
      - persist_to_workspace:
          root: .
          paths: .pulumi

  provision:
    docker:
      - image: "circleci/node:10"
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - run:
          name: Install deps
          command: yarn
      - run:
          name: Install Pulumi plugins
          command: pulumi plugin install
      - run:
          name: List available pulumi stacks
          command: pulumi stack ls
      - pulumi/update:
          stack: topmonks-webs
          skip-preview: true
      - persist_to_workspace:
          root: .
          paths: .pulumi

  preview-provision:
    docker:
      - image: "circleci/node:10"
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - run:
          name: Install deps
          command: yarn
      - run:
          name: Install Pulumi plugins
          command: pulumi plugin install
      - pulumi/preview:
          stack: topmonks-webs

  post-provision:
    docker:
      - image: "cibuilds/aws:latest"
    working_directory: ~/topmonks-webs
    steps:
      - attach_workspace:
          at: ~/topmonks-webs
      - run:
          name: Push Pulumi state to S3
          command: aws s3 sync .pulumi/ s3://topmonks-pulumi-state/

  test-prodeti-topmonks-cz:
    <<: *test-site
    environment:
      HOST: prodeti.topmonks.cz

  deploy-prodeti-topmonks-cz:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E81ZRHS2RR6UN
      HOST: prodeti.topmonks.cz

  test-blockchain-topmonks-com:
    <<: *test-site
    environment:
      HOST: blockchain.topmonks.com

  deploy-blockchain-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E1CJ2HYFKVH0CG
      HOST: blockchain.topmonks.com

  test-studio-topmonks-com:
    <<: *test-site
    environment:
      HOST: studio.topmonks.com

  deploy-monkstage-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E6S8YGG74H6RZ
      HOST: monkstage.topmonks.com

  test-monkstage-topmonks-com:
    <<: *test-site
    environment:
      HOST: monkstage.topmonks.com

  deploy-studio-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E2CIFZELO3K1ME
      HOST: studio.topmonks.com

  test-www-topmonks-com:
    <<: *test-site
    environment:
      HOST: www.topmonks.com

  deploy-www-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E2FSHRGA7F0TNY
      HOST: www.topmonks.com

  test-www-topmonks-cz:
    <<: *test-site
    environment:
      HOST: www.topmonks.cz

  deploy-www-topmonks-cz:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E2K0QM3AL8O9FE
      HOST: www.topmonks.cz

  test-caffe-topmonks-cz:
    <<: *test-site
    environment:
      HOST: caffe.topmonks.cz

  deploy-caffe-topmonks-cz:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: EQ3Z90HYRV83G
      HOST: caffe.topmonks.cz

  test-www-hookamonk-com:
    <<: *test-site
    environment:
      HOST: www.hookamonk.com

  deploy-www-hookamonk-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E2EF8JLZURG0RI
      HOST: www.hookamonk.com

  test-www-xduediligence-com:
    <<: *test-site
    environment:
      HOST: www.xduediligence.com

  deploy-www-xduediligence-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E3CP5QY5Q88VXM
      HOST: www.xduediligence.com

  deploy-xixo-demo-topmonks-com:
    <<: *s3-deploy
    environment:
      AWS_CLOUDFRONT_DISTRIBUTION_ID: E22G4M3HL57V9Z
      HOST: xixo-demo.topmonks.com

workflows:
  build_and_deploy:
    jobs:
      - build
      - pre-provision:
          context: org-global
      - preview-provision:
          context: org-global
          filters:
            branches:
              ignore: master
          requires:
            - pre-provision
      - provision:
          context: org-global
          filters:
            branches:
              only: master
          requires:
            - pre-provision
      - post-provision:
          context: org-global
          requires:
            - provision
      - test-www-topmonks-com:
          requires:
            - build
      - test-blockchain-topmonks-com:
          requires:
            - build
      - test-studio-topmonks-com:
          requires:
            - build
      - test-monkstage-topmonks-com:
          requires:
            - build
      - test-www-topmonks-cz:
          requires:
            - build
      - test-caffe-topmonks-cz:
          requires:
            - build
      - test-prodeti-topmonks-cz:
          requires:
            - build
      - test-www-hookamonk-com:
          requires:
            - build
      - deploy-www-hookamonk-com:
          context: org-global
          requires:
            - provision
            - test-www-hookamonk-com
          filters:
            branches:
              only: master
      - deploy-www-xduediligence-com:
          context: org-global
          requires:
            - provision
            - build
          filters:
            branches:
              only: master
      - deploy-prodeti-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-prodeti-topmonks-cz
          filters:
            branches:
              only: master
      - deploy-www-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-www-topmonks-com
          filters:
            branches:
              only: master
      - deploy-www-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-www-topmonks-cz
          filters:
            branches:
              only: master
      - deploy-blockchain-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-blockchain-topmonks-com
          filters:
            branches:
              only: master
      - deploy-monkstage-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-monkstage-topmonks-com
          filters:
            branches:
              only: master
      - deploy-studio-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-studio-topmonks-com
          filters:
            branches:
              only: master
      - deploy-caffe-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-caffe-topmonks-cz
          filters:
            branches:
              only: master
      - deploy-xixo-demo-topmonks-com:
          context: org-global
          requires:
            - provision
            - build
          filters:
            branches:
              only: master
