version: 2.1
orbs:
  pulumi: pulumi/pulumi@1.0.0
executors:
  aws_cli:
    docker:
      - image: cibuilds/aws:latest
    working_directory: ~/topmonks-webs
commands:
  sync_s3:
    parameters:
      from:
        type: string
      to:
        type: string
    steps:
      - run:
          name: S3 Sync
          command: aws s3 sync << parameters.from >> << parameters.to >>
  invalidate_cloudfront:
    parameters:
      distribution_id:
        type: string
      paths:
        type: string
    steps:
      - run:
          name: Invalidate Cloudfront distribution
          command: |
            aws configure set preview.cloudfront true
            aws cloudfront create-invalidation --distribution-id=<< parameters.distribution_id >> --paths=<< parameters.paths >>
  deploy_website:
    parameters:
      site_name:
        type: string
      distribution_id:
        type: string
      paths:
        type: string
        default: "/*"
    steps:
      - sync_s3:
          from: public/<< parameters.site_name >>
          to: s3://<< parameters.site_name >>
      - invalidate_cloudfront:
          distribution_id: << parameters.distribution_id >>
          paths: << parameters.paths >>

test-site: &test-site
  docker:
    - image: circleci/node:12-browsers
  working_directory: ~/topmonks-webs
  steps:
    - checkout
    - attach_workspace:
        at: ~/topmonks-webs
    - restore_cache:
        keys:
          - v5-dependencies-{{ checksum "yarn.lock" }}
    - run: yarn install --frozen-lockfile --link-duplicates --no-progress
    - run:
        name: Install self-signed cert for localhost
        command: |
          sudo apt-get install libnss3-tools
          mkdir -p $HOME/.pki/nssdb
          certutil -d $HOME/.pki/nssdb -N --empty-password
          certutil -d sql:$HOME/.pki/nssdb -A -t "P,," -n lws-cert -i ./node_modules/lws/ssl/lws-cert.pem
    - run:
        name: Serve site content
        command: yarn serve
        background: true
    - run:
        name: Test site with Lighthouse
        command: |
          mkdir results
          yarn test:lighthouse
          yarn test:ava
    - run:
        name: Check site for broken links
        command: yarn test:broken-links:$HOST
    - store_artifacts:
        path: ./results
    - store_test_results:
        path: ./results

jobs:
  build:
    docker:
      - image: circleci/node:12-browsers
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - restore_cache:
          keys:
            - v5-dependencies-{{ checksum "yarn.lock" }}

      - run: yarn install --frozen-lockfile --link-duplicates --no-progress
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: v5-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn build
      - run: |
          mkdir results
          yarn test
      - store_artifacts:
          path: ./results
      - store_test_results:
          path: ./results
      - persist_to_workspace:
          root: .
          paths: public

  pre-provision:
    executor: aws_cli
    steps:
      - checkout
      - run:
          name: Create Pulumi state folder
          command: mkdir -p .pulumi
      - sync_s3:
          from: s3://topmonks-pulumi-state/
          to: .pulumi/
      - persist_to_workspace:
          root: .
          paths: .pulumi

  provision:
    docker:
      - image: circleci/node:12
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - restore_cache:
          keys:
            - v5-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Install deps
          command: yarn install --frozen-lockfile --production --no-progress --link-duplicates
      - run:
          name: Install Pulumi plugins
          command: pulumi plugin install
      - pulumi/update:
          stack: topmonks-webs
          skip-preview: true
      - persist_to_workspace:
          root: .
          paths: .pulumi

  preview-provision:
    docker:
      - image: circleci/node:12
    working_directory: ~/topmonks-webs
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - run:
          name: "Install Pulumi CLI, if needed"
          command: |
            curl -L https://get.pulumi.com/ | bash -s
            # Add to PATH
            echo 'export PATH=/home/circleci/.pulumi/bin:$PATH' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: "Log into Pulumi"
          command: pulumi login file:///home/circleci/topmonks-webs
      - restore_cache:
          keys:
            - v5-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Install deps
          command: yarn install --frozen-lockfile --production --no-progress --link-duplicates
      - run:
          name: Install Pulumi plugins
          command: pulumi plugin install
      - pulumi/preview:
          stack: topmonks-webs

  post-provision:
    executor: aws_cli
    steps:
      - attach_workspace:
          at: ~/topmonks-webs
      - sync_s3:
          from: .pulumi/
          to: s3://topmonks-pulumi-state/

  test-prodeti-topmonks-cz:
    <<: *test-site
    environment:
      HOST: prodeti.topmonks.cz

  deploy-prodeti-topmonks-cz:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: prodeti.topmonks.cz
          distribution_id: E81ZRHS2RR6UN

  test-blockchain-topmonks-com:
    <<: *test-site
    environment:
      HOST: blockchain.topmonks.com

  deploy-blockchain-topmonks-com:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: blockchain.topmonks.com
          distribution_id: E1CJ2HYFKVH0CG

  test-studio-topmonks-com:
    <<: *test-site
    environment:
      HOST: studio.topmonks.com

  deploy-monkstage-topmonks-com:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: monkstage.topmonks.com
          distribution_id: E6S8YGG74H6RZ

  test-monkstage-topmonks-com:
    <<: *test-site
    environment:
      HOST: monkstage.topmonks.com

  deploy-session-monk-topmonks-com:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: session-monk.topmonks.com
          distribution_id: E17DFTNXWI9SIA

  test-session-monk-topmonks-com:
    <<: *test-site
    environment:
      HOST: session-monk.topmonks.com

  deploy-studio-topmonks-com:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: studio.topmonks.com
          distribution_id: E2CIFZELO3K1ME

  test-www-topmonks-com:
    <<: *test-site
    environment:
      HOST: www.topmonks.com

  deploy-www-topmonks-com:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: www.topmonks.com
          distribution_id: E2FSHRGA7F0TNY

  test-www-topmonks-cz:
    <<: *test-site
    environment:
      HOST: www.topmonks.cz

  deploy-www-topmonks-cz:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: www.topmonks.cz
          distribution_id: E2K0QM3AL8O9FE

  test-caffe-topmonks-cz:
    <<: *test-site
    environment:
      HOST: caffe.topmonks.cz

  deploy-caffe-topmonks-cz:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: caffe.topmonks.cz
          distribution_id: EQ3Z90HYRV83G

  test-www-hookamonk-com:
    <<: *test-site
    environment:
      HOST: www.hookamonk.com

  deploy-www-hookamonk-com:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - sync_s3:
          from: public/www.hookamonk.com
          to: s3://www.hookamonk.com
      - run:
          name: Update MIME types
          command: aws s3 cp --exclude "*" --include "apple-app-site-association" --content-type="application/json; charset=utf-8" --metadata-directive="REPLACE" --recursive s3://session-monk.topmonks.com/ s3://session-monk.topmonks.com/
      - invalidate_cloudfront:
          distribution_id: E2EF8JLZURG0RI
          paths: "/*"

  test-monkslab-cz:
    <<: *test-site
    environment:
      HOST: monkslab.cz

  deploy-monkslab-cz:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: monkslab.cz
          distribution_id: E1P5V9ZE9J2UMI

  test-www-hlidacshopu-cz:
    <<: *test-site
    environment:
      HOST: www.hlidacshopu.cz

  deploy-www-hlidacshopu-cz:
    executor: aws_cli
    steps:
      - checkout
      - attach_workspace:
          at: ~/topmonks-webs
      - deploy_website:
          site_name: www.hlidacshopu.cz
          distribution_id: E107VH184U5I4G

workflows:
  build_and_deploy:
    jobs:
      - build:
          context: org-global
      - pre-provision:
          context: org-global
      - preview-provision:
          context: org-global
          filters:
            branches:
              ignore: master
          requires:
            - pre-provision
      - provision:
          context: org-global
          filters:
            branches:
              only: master
          requires:
            - pre-provision
      - post-provision:
          context: org-global
          requires:
            - provision
      - test-www-topmonks-com:
          requires:
            - build
      - test-blockchain-topmonks-com:
          requires:
            - build
      - test-studio-topmonks-com:
          requires:
            - build
      - test-monkstage-topmonks-com:
          requires:
            - build
      - test-www-topmonks-cz:
          requires:
            - build
      - test-caffe-topmonks-cz:
          requires:
            - build
      - test-prodeti-topmonks-cz:
          requires:
            - build
      - deploy-prodeti-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-prodeti-topmonks-cz
          filters:
            branches:
              only: master
      - test-session-monk-topmonks-com:
          requires:
            - build
      - deploy-session-monk-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-session-monk-topmonks-com
          filters:
            branches:
              only: master
      - deploy-www-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-www-topmonks-com
          filters:
            branches:
              only: master
      - deploy-www-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-www-topmonks-cz
          filters:
            branches:
              only: master
      - deploy-blockchain-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-blockchain-topmonks-com
          filters:
            branches:
              only: master
      - deploy-monkstage-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-monkstage-topmonks-com
          filters:
            branches:
              only: master
      - deploy-studio-topmonks-com:
          context: org-global
          requires:
            - provision
            - test-studio-topmonks-com
          filters:
            branches:
              only: master
      - deploy-caffe-topmonks-cz:
          context: org-global
          requires:
            - provision
            - test-caffe-topmonks-cz
          filters:
            branches:
              only: master
      - test-monkslab-cz:
          requires:
            - build
      - deploy-monkslab-cz:
          context: org-global
          requires:
            - provision
            - test-monkslab-cz
          filters:
            branches:
              only: master
      - deploy-www-hookamonk-com:
          context: org-global
          requires:
            - provision
            - build
          filters:
            branches:
              only: master
      - test-www-hlidacshopu-cz:
          requires:
            - build
      - deploy-www-hlidacshopu-cz:
          context: org-global
          requires:
            - provision
            - test-www-hlidacshopu-cz
          filters:
            branches:
              only: master
